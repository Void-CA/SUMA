from typing import Any, Dict, List

# Aliases
IPAddress = str
SubnetMask = str
NetworkClass = str
ExportFormat = str  # "json", "csv", "yaml", "yml", "xml", "md", "markdown", "txt", "text", "xlsx", "excel"

class SubnetRow:
    subred: int
    direccion_red: str
    primera_ip: str
    ultima_ip: str
    broadcast: str
    hosts_per_net: int

    def to_dict(self) -> Dict[str, Any]: ...
    def to_pretty_string(self) -> str: ...
    def to_json(self) -> str: ...
    def to_csv(self) -> str: ...
    def to_yaml(self) -> str: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class FLSMCalculator:
    def __init__(self, ip: IPAddress, subnet_count: int) -> None: ...
    def summary(self) -> str: ...
    def print_summary(self) -> None: ...
    def subnets_table(self) -> str: ...
    def print_table(self) -> None: ...
    def get_subnets(self) -> List[SubnetRow]: ...
    def get_subnet(self, subnet_number: int) -> SubnetRow: ...
    def to_dict(self) -> Dict[str, Any]: ...
    def to_json(self) -> str: ...
    def to_csv(self) -> str: ...
    def to_markdown(self) -> str: ...
    def to_excel(self, path: str) -> None: ...
    def export_to_file(self, filename: str, format: ExportFormat) -> None: ...

    @property
    def base_ip(self) -> IPAddress: ...
    @property
    def base_cidr(self) -> int: ...
    @property
    def subnet_count(self) -> int: ...
    @property
    def network_class(self) -> NetworkClass: ...
    @property
    def new_cidr(self) -> int: ...
    @property
    def subnet_mask(self) -> SubnetMask: ...
    @property
    def subnet_size(self) -> int: ...
    @property
    def hosts_per_subnet(self) -> int: ...
    @property
    def utilization_percentage(self) -> float: ...
    @property
    def total_hosts(self) -> int: ...

    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...




class VLSMCalculator:
    def __init__(self, ip: IPAddress, host_requirements: List[int]) -> None: ...

    def summary(self) -> str: ...
    def print_summary(self) -> None: ...
    def subnets_table(self) -> str: ...
    def print_table(self) -> None: ...

    def get_subnets(self) -> List[SubnetRow]: ...
    def get_subnet(self, subnet_number: int) -> SubnetRow: ...

    def to_dict(self) -> Dict[str, Any]: ...
    def to_json(self) -> str: ...
    def to_csv(self) -> str: ...
    def to_markdown(self) -> str: ...
    def to_excel(self, path: str) -> None: ...
    def export_to_file(self, filename: str, format: ExportFormat) -> None: ...

    @property
    def base_ip(self) -> IPAddress: ...

    @property
    def base_cidr(self) -> int: ...

    @property
    def network_class(self) -> NetworkClass: ...

    @property
    def host_requirements(self) -> List[int]: ...

    @property
    def efficiency(self) -> float: ...

    @property
    def utilization_percentage(self) -> float: ...

    @property
    def total_hosts(self) -> int: ...

    @property
    def subnet_count(self) -> int: ...

    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
